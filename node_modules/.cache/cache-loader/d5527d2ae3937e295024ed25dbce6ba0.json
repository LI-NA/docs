{"remainingRequest":"C:\\Users\\theod\\OneDrive\\Documents\\GitHub\\standardnotes\\newdocs\\node_modules\\babel-loader\\lib\\index.js??ref--7-1!C:\\Users\\theod\\OneDrive\\Documents\\GitHub\\standardnotes\\newdocs\\node_modules\\@docusaurus\\mdx-loader\\src\\index.js??ref--7-2!C:\\Users\\theod\\OneDrive\\Documents\\GitHub\\standardnotes\\newdocs\\node_modules\\@docusaurus\\plugin-content-docs\\lib\\markdown\\index.js??ref--7-3!C:\\Users\\theod\\OneDrive\\Documents\\GitHub\\standardnotes\\newdocs\\docs\\extensions\\actions.md","dependencies":[{"path":"C:\\Users\\theod\\OneDrive\\Documents\\GitHub\\standardnotes\\newdocs\\docs\\extensions\\actions.md","mtime":1580497919596},{"path":"C:\\Users\\theod\\OneDrive\\Documents\\GitHub\\standardnotes\\newdocs\\.docusaurus\\docusaurus-plugin-content-docs\\site-docs-extensions-actions-md-d34.json","mtime":1580498142667},{"path":"C:\\Users\\theod\\OneDrive\\Documents\\GitHub\\standardnotes\\newdocs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580437076461},{"path":"C:\\Users\\theod\\OneDrive\\Documents\\GitHub\\standardnotes\\newdocs\\node_modules\\babel-loader\\lib\\index.js","mtime":1580437076458},{"path":"C:\\Users\\theod\\OneDrive\\Documents\\GitHub\\standardnotes\\newdocs\\node_modules\\@docusaurus\\mdx-loader\\src\\index.js","mtime":1580437091490},{"path":"C:\\Users\\theod\\OneDrive\\Documents\\GitHub\\standardnotes\\newdocs\\node_modules\\@docusaurus\\plugin-content-docs\\lib\\markdown\\index.js","mtime":1580437090921}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iQzpcXFVzZXJzXFx0aGVvZFxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxzdGFuZGFyZG5vdGVzXFxuZXdkb2NzXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjtpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSJDOlxcVXNlcnNcXHRoZW9kXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXHN0YW5kYXJkbm90ZXNcXG5ld2RvY3NcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IHZhciBmcm9udE1hdHRlcj17aWQ6J2FjdGlvbnMnLHRpdGxlOidBY3Rpb25zJyxzaWRlYmFyX2xhYmVsOidBY3Rpb25zJ307ZXhwb3J0IHZhciBtZXRhZGF0YT17ImlkIjoiZXh0ZW5zaW9ucy9hY3Rpb25zIiwidGl0bGUiOiJBY3Rpb25zIiwiZGVzY3JpcHRpb24iOiJBY3Rpb25zIGFyZSBtZW51LWJhc2VkIGV4dGVuc2lvbnMgdGhhdCBhbGxvdyB5b3UgdG8gYnVpbGQgc2ltcGxlIEFQSXMgdGhhdCBkbyBub3QgcmVxdWlyZSBhIHVzZXIgaW50ZXJmYWNlLiBBY3Rpb25zIGhhdmUgdGhlIHBvd2VyIHRvIHJlY2VpdmUgdGhlIHdvcmtpbmcgbm90ZSBhbmQgbW9kaWZ5IGl0LiBXZSB1c2UgYWN0aW9ucyBmb3Igb3VyIE5vdGUgSGlzdG9yeSBleHRlbnNpb24sIGFzIHdlbGwgYXMgTGlzdGVkIGFuZCBGaWxlIEF0dGFjaG1lbnRzLlxyIiwic291cmNlIjoiQHNpdGUvZG9jc1xcZXh0ZW5zaW9uc1xcYWN0aW9ucy5tZCIsInBlcm1hbGluayI6Ii9uZXdkb2NzL2RvY3MvZXh0ZW5zaW9ucy9hY3Rpb25zIiwiZWRpdFVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9zdGFuZGFyZG5vdGVzL25ld2RvY3MvZG9jcy9leHRlbnNpb25zL2FjdGlvbnMubWQiLCJzaWRlYmFyX2xhYmVsIjoiQWN0aW9ucyIsInNpZGViYXIiOiJzb21lU2lkZWJhciIsInByZXZpb3VzIjp7InRpdGxlIjoiVGhlbWVzIiwicGVybWFsaW5rIjoiL25ld2RvY3MvZG9jcy9leHRlbnNpb25zL3RoZW1lcyJ9LCJuZXh0Ijp7InRpdGxlIjoiUHVibGlzaGluZyIsInBlcm1hbGluayI6Ii9uZXdkb2NzL2RvY3MvZXh0ZW5zaW9ucy9wdWJsaXNoaW5nIn19Oy8qIEBqc3ggbWR4ICovZXhwb3J0IHZhciByaWdodFRvYz1be3ZhbHVlOidCdWlsZGluZyBhbiBBY3Rpb24nLGlkOididWlsZGluZy1hbi1hY3Rpb24nLGNoaWxkcmVuOltdfSx7dmFsdWU6J0luc3RhbGxpbmcgYW4gQWN0aW9uJyxpZDonaW5zdGFsbGluZy1hbi1hY3Rpb24nLGNoaWxkcmVuOltdfSx7dmFsdWU6J0FjdGlvbiBQb3RlbnRpYWwnLGlkOidhY3Rpb24tcG90ZW50aWFsJyxjaGlsZHJlbjpbXX1dO3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXtyaWdodFRvYzpyaWdodFRvY307dmFyIE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudChfcmVmKXt2YXIgY29tcG9uZW50cz1fcmVmLmNvbXBvbmVudHMscHJvcHM9X29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJwIixudWxsLCJBY3Rpb25zIGFyZSBtZW51LWJhc2VkIGV4dGVuc2lvbnMgdGhhdCBhbGxvdyB5b3UgdG8gYnVpbGQgc2ltcGxlIEFQSXMgdGhhdCBkbyBub3QgcmVxdWlyZSBhIHVzZXIgaW50ZXJmYWNlLiBBY3Rpb25zIGhhdmUgdGhlIHBvd2VyIHRvIHJlY2VpdmUgdGhlIHdvcmtpbmcgbm90ZSBhbmQgbW9kaWZ5IGl0LiBXZSB1c2UgYWN0aW9ucyBmb3Igb3VyIE5vdGUgSGlzdG9yeSBleHRlbnNpb24sIGFzIHdlbGwgYXMgTGlzdGVkIGFuZCBGaWxlIEF0dGFjaG1lbnRzLiIpLG1keCgiaDIiLHsiaWQiOiJidWlsZGluZy1hbi1hY3Rpb24ifSwiQnVpbGRpbmcgYW4gQWN0aW9uIiksbWR4KCJwIixudWxsLCJCdWlsZGluZyBhbiBhY3Rpb24tYmFzZWQgZXh0ZW5zaW9uIGNhbiBiZSBkb25lIHRocm91Z2ggYW55IGJhY2tlbmQgc3lzdGVtIG9mIHlvdXIgY2hvb3NpbmcuIFdlIHVzZSBSYWlscyB0byBidWlsZCB0aGUgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL3N0YW5kYXJkbm90ZXMvbGlzdGVkIn0pLCJMaXN0ZWQiKSwiIGV4dGVuc2lvbiwgd2hpY2ggYWxsb3dzIHlvdSB0byBjcmVhdGUgYW5kIG1hbmFnZSBhIGJsb2dnaW5nIHB1YmxpY2F0aW9uIGZyb20geW91ciBub3Rlcy4iKSxtZHgoInAiLG51bGwsIkluIHRoaXMgZXhhbXBsZSwgd2UnbGwgcmVjcmVhdGUgYSBzaW1wbGUgY2xvbmUgb2YgTGlzdGVkLiIpLG1keCgib2wiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sbWR4KCJwIix7cGFyZW50TmFtZToibGkifSwiR2VuZXJhdGUgYSBzZWNyZXQgaW5zdGFsbGF0aW9uIGxpbmsgZm9yIHRoZSB1c2VyLiIpLG1keCgicCIse3BhcmVudE5hbWU6ImxpIn0sIlRoZSBzZWNyZXQgaW5zdGFsbGF0aW9uIGxpbmsgd2lsbCBjb250YWluIGEgcmFuZG9tbHkgZ2VuZXJhdGVkIHNlY3JldCBrZXkgdGhhdCBhdXRoZW50aWNhdGVzIHRoZSB1c2VyIHRvIHRoZSBzZXJ2ZXIuIFRoZSB1c2VyIG5lZWQgb25seSBjb3B5IHRoZSByZXN1bHRpbmcgbGluayBpbnRvIFN0YW5kYXJkIE5vdGVzLCBhbmQgaXQgaXMgdGhlbiByZW1lbWJlcmVkIGF1dG9tYXRpY2FsbHkgYW5kIHNlbnQgdG8gdGhlIHNlcnZlciB3aXRoIGV2ZXJ5IHN1YnNlcXVlbnQgcmVxdWVzdC4iKSxtZHgoInByZSIse3BhcmVudE5hbWU6ImxpIn0sbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1ydWJ5In0pLCJhdXRob3IgPSBBdXRob3IubmV3XG5zZWNyZXQgPSAgRGlnZXN0OjpTSEEyNTYuaGV4ZGlnZXN0KFNlY3VyZVJhbmRvbS5oZXgpXG5zZWNyZXRfdXJsID0gQ0dJLmVzY2FwZShcIiN7RU5WWydIT1NUJ119L2F1dGhvcnMvI3thdXRob3IuaWR9L2V4dGVuc2lvbi8/c2VjcmV0PSN7c2VjcmV0fSZ0eXBlPXNuXCIpXG4iKSksbWR4KCJwIix7cGFyZW50TmFtZToibGkifSwiRGlzcGxheSB0aGUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sInNlY3JldF91cmwiKSwiIHRvIHRoZSB1c2VyIGFuZCBpbnN0cnVjdCB0aGVtIHRvIGluc3RhbGwgdGhlIHVybCBpbiBTdGFuZGFyZCBOb3RlcywgdmlhIHRoZSBFeHRlbnNpb25zIG1lbnUgaW4gdGhlIGxvd2VyIGxlZnQgY29ybmVyLiIpKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxtZHgoInAiLHtwYXJlbnROYW1lOiJsaSJ9LCJXaGVuZXZlciB0aGUgdXNlciBjbGlja3Mgb24gdGhlIFwiQWN0aW9uc1wiIG1lbnUgd2l0aGluIFN0YW5kYXJkIE5vdGVzLCBTTiB3aWxsIG1ha2UgYSBHRVQgcmVxdWVzdCB0byB0aGUgdXNlcidzIHNlY3JldCBVUkwuIEl0IGlzIGhlcmUgdGhhdCB5b3UgcmV0dXJuIGEgSlNPTiBvYmplY3QgdGhhdCBjb250YWlucyBzb21lIG1ldGFkYXRhIGFuZCBhcHBsaWNhYmxlIGFjdGlvbnMuIiksbWR4KCJwIix7cGFyZW50TmFtZToibGkifSwiSGVyZSBpcyB3aGF0IExpc3RlZCBoYW5kbGVzIHRoZSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiZXh0ZW5zaW9uIiksIiBlbmRwb2ludCB0aGF0IGlzIGVuY29kZWQgaW4gdGhlIHVzZXIncyBzZWNyZXQgdXJsOiIpLG1keCgicHJlIix7cGFyZW50TmFtZToibGkifSxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXJ1YnkifSksImRlZiBleHRlbnNpb25cbiAgc2VjcmV0ID0gcGFyYW1zWzpzZWNyZXRdXG4gIGl0ZW1fdXVpZCA9IHBhcmFtc1s6aXRlbV91dWlkXVxuXG4gIG5hbWUgPSBcIkxpc3RlZFwiXG4gIHN1cHBvcnRlZF90eXBlcyA9IFtcIk5vdGVcIl1cbiAgYWN0aW9ucyA9IFtdXG4gIGlmIGl0ZW1fdXVpZFxuICAgIGFjdGlvbnMgKz0gW1xuICAgICAge1xuICAgICAgICA6bGFiZWwgPT4gXCJQdWJsaXNoIHRvIEJsb2dcIixcbiAgICAgICAgOnVybCA9PiBcIiN7RU5WWydIT1NUJ119L2F1dGhvcnMvI3tAYXV0aG9yLmlkfS9wb3N0cy8/dW5saXN0ZWQ9ZmFsc2Umc2VjcmV0PSN7c2VjcmV0fSZpdGVtX3V1aWQ9I3tpdGVtX3V1aWR9XCIsXG4gICAgICAgIDp2ZXJiID0+IFwicG9zdFwiLFxuICAgICAgICA6Y29udGV4dCA9PiBcIkl0ZW1cIixcbiAgICAgICAgOmNvbnRlbnRfdHlwZXMgPT4gW1wiTm90ZVwiXSxcbiAgICAgICAgOmFjY2Vzc190eXBlID0+IFwiZGVjcnlwdGVkXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIDpsYWJlbCA9PiBcIk9wZW4gQmxvZ1wiLFxuICAgICAgICA6dXJsID0+IEBhdXRob3IudXNlcm5hbWUgJiYgQGF1dGhvci51c2VybmFtZS5sZW5ndGggPiAwID8gQGF1dGhvci51cmwgOiBcIiN7RU5WWydIT1NUJ119L2F1dGhvcnMvI3tAYXV0aG9yLmlkfVwiLFxuICAgICAgICA6dmVyYiA9PiBcInNob3dcIixcbiAgICAgICAgOmNvbnRleHQgPT4gXCJJdGVtXCIsXG4gICAgICAgIDpjb250ZW50X3R5cGVzID0+IFtcIk5vdGVcIl0sXG4gICAgICAgIDphY2Nlc3NfdHlwZSA9PiBcImRlY3J5cHRlZFwiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICA6bGFiZWwgPT4gXCJQdWJsaXNoIHRvIFByaXZhdGUgTGlua1wiLFxuICAgICAgICA6dXJsID0+IFwiI3tFTlZbJ0hPU1QnXX0vYXV0aG9ycy8je0BhdXRob3IuaWR9L3Bvc3RzLz91bmxpc3RlZD10cnVlJnNlY3JldD0je3NlY3JldH0maXRlbV91dWlkPSN7aXRlbV91dWlkfVwiLFxuICAgICAgICA6dmVyYiA9PiBcInBvc3RcIixcbiAgICAgICAgOmNvbnRleHQgPT4gXCJJdGVtXCIsXG4gICAgICAgIDpjb250ZW50X3R5cGVzID0+IFtcIk5vdGVcIl0sXG4gICAgICAgIDphY2Nlc3NfdHlwZSA9PiBcImRlY3J5cHRlZFwiXG4gICAgICB9XG4gICAgXVxuICBlbmRcblxuICBwb3N0ID0gUG9zdC5maW5kX2J5X2l0ZW1fdXVpZChpdGVtX3V1aWQpXG4gIGlmIHBvc3RcbiAgICBhY3Rpb25zLnB1c2goXG4gICAge1xuICAgICAgOmxhYmVsID0+IFwiT3BlbiBQcml2YXRlIExpbmtcIixcbiAgICAgIDp1cmwgPT4gXCIje0VOVlsnSE9TVCddfS8je3Bvc3QudG9rZW59XCIsXG4gICAgICA6dmVyYiA9PiBcInNob3dcIixcbiAgICAgIDpjb250ZXh0ID0+IFwiSXRlbVwiLFxuICAgICAgOmNvbnRlbnRfdHlwZXMgPT4gW1wiTm90ZVwiXVxuICAgIH0pXG5cbiAgICBhY3Rpb25zLnB1c2goXG4gICAge1xuICAgICAgOmxhYmVsID0+IFwiVW5wdWJsaXNoXCIsXG4gICAgICA6dXJsID0+IFwiI3tFTlZbJ0hPU1QnXX0vYXV0aG9ycy8je0BhdXRob3IuaWR9L3Bvc3RzLyN7cG9zdC5pZH0vdW5wdWJsaXNoP3NlY3JldD0je3NlY3JldH1cIixcbiAgICAgIDp2ZXJiID0+IFwicG9zdFwiLFxuICAgICAgOmNvbnRleHQgPT4gXCJJdGVtXCIsXG4gICAgICA6Y29udGVudF90eXBlcyA9PiBbXCJOb3RlXCJdXG4gICAgfSlcbiAgZW5kXG5cbiAgYWN0aW9ucy5wdXNoIChcbiAge1xuICAgIDpsYWJlbCA9PiBcIlNldHRpbmdzXCIsXG4gICAgOnVybCA9PiBcIiN7RU5WWydIT1NUJ119L2F1dGhvcnMvI3tAYXV0aG9yLmlkfS9zZXR0aW5ncz9zZWNyZXQ9I3tzZWNyZXR9XCIsXG4gICAgOnZlcmIgPT4gXCJzaG93XCIsXG4gICAgOmNvbnRleHQgPT4gXCJJdGVtXCIsXG4gICAgOmNvbnRlbnRfdHlwZXMgPT4gW1wiTm90ZVwiXVxuICB9XG4gIClcblxuICBkZXNjcmlwdGlvbiA9IFwiUHVibGlzaGVzIHRvIGxpc3RlZC50by4gUmVxdWlyZXMgZGVjcnlwdGVkIGFjY2VzcyB0byBwdWJsaXNoaW5nIG5vdGUuXCJcbiAgcmVuZGVyIDpqc29uID0+IHs6bmFtZSA9PiBuYW1lLCA6ZGVzY3JpcHRpb24gPT4gZGVzY3JpcHRpb24sIDpzdXBwb3J0ZWRfdHlwZXMgPT4gc3VwcG9ydGVkX3R5cGVzLCA6YWN0aW9ucyA9PiBhY3Rpb25zfVxuZW5kXG4iKSksbWR4KCJwIix7cGFyZW50TmFtZToibGkifSwiQWN0aW9ucyBoYXZlIHRoZSBmb2xsb3dpbmcgcHJvcGVydGllczoiKSxtZHgoInRhYmxlIix7cGFyZW50TmFtZToibGkifSxtZHgoInRoZWFkIix7cGFyZW50TmFtZToidGFibGUifSxtZHgoInRyIix7cGFyZW50TmFtZToidGhlYWQifSxtZHgoInRoIixfZXh0ZW5kcyh7cGFyZW50TmFtZToidHIifSx7ImFsaWduIjoibGVmdCJ9KSwiS2V5IiksbWR4KCJ0aCIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InRyIn0seyJhbGlnbiI6ImxlZnQifSksIkRlc2NyaXB0aW9uIikpKSxtZHgoInRib2R5Iix7cGFyZW50TmFtZToidGFibGUifSxtZHgoInRyIix7cGFyZW50TmFtZToidGJvZHkifSxtZHgoInRkIixfZXh0ZW5kcyh7cGFyZW50TmFtZToidHIifSx7ImFsaWduIjoibGVmdCJ9KSxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InRkIn0sbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToic3Ryb25nIn0sImxhYmVsIikpKSxtZHgoInRkIixfZXh0ZW5kcyh7cGFyZW50TmFtZToidHIifSx7ImFsaWduIjoibGVmdCJ9KSwiV2hhdCB0aGUgVUkgd2lsbCBkaXNwbGF5IGZvciB0aGlzIGFjdGlvbi4iKSksbWR4KCJ0ciIse3BhcmVudE5hbWU6InRib2R5In0sbWR4KCJ0ZCIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InRyIn0seyJhbGlnbiI6ImxlZnQifSksbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJ0ZCJ9LG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InN0cm9uZyJ9LCJ1cmwiKSkpLG1keCgidGQiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJ0ciJ9LHsiYWxpZ24iOiJsZWZ0In0pLCJUaGUgVVJMIHRoYXQgU3RhbmRhcmQgTm90ZXMgd2lsbCBtYWtlIGEgcmVxdWVzdCB0byB3aGVuIHRoZSB1c2VyIHNlbGVjdHMgdGhpcyBhY3Rpb24uIikpLG1keCgidHIiLHtwYXJlbnROYW1lOiJ0Ym9keSJ9LG1keCgidGQiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJ0ciJ9LHsiYWxpZ24iOiJsZWZ0In0pLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToidGQifSxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJzdHJvbmcifSwidmVyYiIpKSksbWR4KCJ0ZCIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InRyIn0seyJhbGlnbiI6ImxlZnQifSksIkluc3RydWN0cyBTdGFuZGFyZCBOb3RlcyBob3cgdG8gaGFuZGxlIHRoZSBVUkwuIFRoaXMgY2FuIGJlIG9uZSBvZjoiKSksbWR4KCJ0ciIse3BhcmVudE5hbWU6InRib2R5In0sbWR4KCJ0ZCIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InRyIn0seyJhbGlnbiI6ImxlZnQifSkpLG1keCgidGQiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJ0ciJ9LHsiYWxpZ24iOiJsZWZ0In0pLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToidGQifSxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJzdHJvbmcifSwic2hvdyIpKSwiOiBTdGFuZGFyZCBOb3RlcyB3aWxsIG9wZW4gdGhlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToidGQifSwidXJsIiksIiBpbiBhIGJyb3dzZXIuIikpLG1keCgidHIiLHtwYXJlbnROYW1lOiJ0Ym9keSJ9LG1keCgidGQiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJ0ciJ9LHsiYWxpZ24iOiJsZWZ0In0pKSxtZHgoInRkIixfZXh0ZW5kcyh7cGFyZW50TmFtZToidHIifSx7ImFsaWduIjoibGVmdCJ9KSxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InRkIn0sbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToic3Ryb25nIn0sInBvc3QiKSksIjogU3RhbmRhcmQgTm90ZXMgd2lsbCBtYWtlIGEgUE9TVCByZXF1ZXN0IHRvIHRoZSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InRkIn0sInVybCIpLCIgd2l0aCB0aGUgY3VycmVudCBpdGVtIGluY2x1ZGVkIGluIHRoZSBwYXJhbWV0ZXJzLiIpKSxtZHgoInRyIix7cGFyZW50TmFtZToidGJvZHkifSxtZHgoInRkIixfZXh0ZW5kcyh7cGFyZW50TmFtZToidHIifSx7ImFsaWduIjoibGVmdCJ9KSksbWR4KCJ0ZCIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InRyIn0seyJhbGlnbiI6ImxlZnQifSksbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJ0ZCJ9LG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InN0cm9uZyJ9LCJnZXQiKSksIjogU3RhbmRhcmQgTm90ZXMgd2lsbCBtYWtlIGEgR0VUIHJlcXVlc3QgdG8gdGhlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToidGQifSwidXJsIiksIiBhbmQgZXhwZWN0IGFuICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToidGQifSwiSXRlbSIpLCIgaW4gcmVzcG9uc2UuIFRoZSBpdGVtIHdpbGwgYmUgdXNlZCB0byB1cGRhdGUgdGhlIGN1cnJlbnQgd29ya2luZyBub3RlLiBXZSB1c2UgdGhpcyBmb3Igb3VyIE5vdGUgSGlzdG9yeSBleHRlbnNpb24gdG8gdXBkYXRlIHRoZSBjdXJyZW50IG5vdGUgd2l0aCBhIHByZXZpb3VzIHZlcnNpb24gb2YgaXQuIikpLG1keCgidHIiLHtwYXJlbnROYW1lOiJ0Ym9keSJ9LG1keCgidGQiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJ0ciJ9LHsiYWxpZ24iOiJsZWZ0In0pKSxtZHgoInRkIixfZXh0ZW5kcyh7cGFyZW50TmFtZToidHIifSx7ImFsaWduIjoibGVmdCJ9KSxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InRkIn0sbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToic3Ryb25nIn0sInJlbmRlciIpKSwiOiBTdGFuZGFyZCBOb3RlcyB3aWxsIG1ha2UgYSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InRkIn0sIkdFVCIpLCIgcmVxdWVzdCB0byB0aGUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJ0ZCJ9LCJ1cmwiKSwiIGFuZCBleHBlY3QgYW4gIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJ0ZCJ9LCJJdGVtIiksIiwgYnV0IGluc3RlYWQgb2YgdXBkYXRpbmcgdGhlIGl0ZW0sIGl0IHdpbGwgcHJldmlldyBpdCBpbiBhIG1vZGFsLiBUaGlzIGFsbG93cyBhIHVzZXIgdG8gcHJldmlldyB0aGUgY29udGVudHMgb2YgYW4gaW5jb21pbmcgaXRlbSBiZWZvcmUgY2hvb3NpbmcgdG8gcmVwbGFjZSB0aGUgY3VycmVudCBub3RlIHdpdGggd2hhdGV2ZXIgaXMgcmV0cmlldmVkIGZyb20gdGhlIHNlcnZlci4gV2UgYWxzbyB1c2UgdGhpcyBpbiBvdXIgTm90ZSBIaXN0b3J5IGV4dGVuc2lvbi4iKSksbWR4KCJ0ciIse3BhcmVudE5hbWU6InRib2R5In0sbWR4KCJ0ZCIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InRyIn0seyJhbGlnbiI6ImxlZnQifSkpLG1keCgidGQiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJ0ciJ9LHsiYWxpZ24iOiJsZWZ0In0pLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToidGQifSxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJzdHJvbmcifSwiY29udGV4dCIpKSwiOiBDb250ZXh0IHNob3VsZCBtb3N0bHkgYmUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJ0ZCJ9LCJJdGVtIiksIiwgd2hpY2ggbWVhbnMgdGhhdCB0aGlzIGFjdGlvbiBhcHBsaWVzIHRvIGEgcGFydGljdWxhciBpdGVtLCBhbmQgaXMgbm90IGp1c3QgYSBnZW5lcmFsIGFjdGlvbi4gSW4gdGhlIHBhc3QsICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToidGQifSwiY29udGV4dCIpLCIgY291bGQgdGFrZSBvbiB0aGUgdmFsdWUgb2YgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJ0ZCJ9LCJnbG9iYWwiKSwiLCB3aGljaCBtZWFucyBpdCBoYXMgYWN0aW9ucyBhdmFpbGFibGUgdGhhdCBhcmUgbm90IHJlbGF0ZWQgdG8gYW4gaXRlbS4gSG93ZXZlciwgdGhpcyBmdW5jdGlvbmFsaXR5IGlzIHVub2ZmaWNpYWxseSBkZXByZWNhdGVkLCB3aXRoIGFuIG9mZmljaWFsIGRlcHJlY2F0aW9uIGNvbWluZyBzb29uLiIpKSxtZHgoInRyIix7cGFyZW50TmFtZToidGJvZHkifSxtZHgoInRkIixfZXh0ZW5kcyh7cGFyZW50TmFtZToidHIifSx7ImFsaWduIjoibGVmdCJ9KSksbWR4KCJ0ZCIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InRyIn0seyJhbGlnbiI6ImxlZnQifSksbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJ0ZCJ9LG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InN0cm9uZyJ9LCJjb250ZW50X3R5cGVzIikpLCI6IFRoZSBraW5kcyBvZiBpdGVtcyB0aGlzIGFjdGlvbiBhcHBsaWVzIHRvLiBDdXJyZW50bHkgb25seSAnTm90ZScgYWN0aW9ucyBhcmUgc3VwcG9ydGVkLiBJbiB0aGUgZnV0dXJlLCB3ZSBtaWdodCBhbGxvdyBmb3IgYWN0aW9ucyBvbiBhICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToidGQifSwiVGFnIiksIiBvciBvdGhlciBjb250ZW50IHR5cGVzLCBidXQgbm8gc3VjaCBpbnRlcmZhY2UgaXMgY3VycmVudGx5IGF2YWlsYWJsZS4iKSkpKSksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sbWR4KCJwIix7cGFyZW50TmFtZToibGkifSwiV2hlbiBhIHVzZXIgc2VsZWN0cyB0aGUgYWN0aW9uLCB5b3VyIHNlcnZlciBzaG91bGQgYmUgcmVhZHkgdG8gaGFuZGxlIHRoYXQgZW5kcG9pbnQsIGFuZCBpbiBtb3N0IGNhc2VzIGV4cGVjdCBhbiBpdGVtLiBIZXJlJ3MgaG93IExpc3RlZCBoYW5kbGVzIHRoZSBcIlB1Ymxpc2ggdG8gQmxvZ1wiIGFjdGlvbjoiKSxtZHgoInByZSIse3BhcmVudE5hbWU6ImxpIn0sbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1ydWJ5In0pLCJkZWYgY3JlYXRlXG4gIGl0ZW1fdXVpZCA9IHBhcmFtc1s6aXRlbV91dWlkXVxuICBwb3N0ID0gUG9zdC5maW5kX2J5X2l0ZW1fdXVpZChpdGVtX3V1aWQpXG4gIGlmIHBvc3QgJiYgcG9zdC5hdXRob3IgIT0gQGF1dGhvclxuICAgIHJldHVyblxuICBlbmRcblxuICBpZiAhcG9zdFxuICAgIHBvc3QgPSBAYXV0aG9yLnBvc3RzLm5ldyhwb3N0X3BhcmFtcylcbiAgZWxzZVxuICAgIHBvc3QudXBkYXRlKHBvc3RfcGFyYW1zKVxuICBlbmRcblxuICBpdGVtID0gcGFyYW1zWzppdGVtc11bMF1cbiAgY29udGVudCA9IGl0ZW1bXCJjb250ZW50XCJdXG5cbiAgcG9zdC50aXRsZSA9IGNvbnRlbnRbXCJ0aXRsZVwiXVxuICBwb3N0LnRleHQgPSBjb250ZW50W1widGV4dFwiXVxuICBwb3N0LnNhdmVcbmVuZFxuIikpKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxtZHgoInAiLHtwYXJlbnROYW1lOiJsaSJ9LCJUaGF0J3MgYWJvdXQgaXQuIikpKSxtZHgoImgyIix7ImlkIjoiaW5zdGFsbGluZy1hbi1hY3Rpb24ifSwiSW5zdGFsbGluZyBhbiBBY3Rpb24iKSxtZHgoInAiLG51bGwsIkFjdGlvbnMgaGF2ZSB0aGUgZm9sbG93aW5nIFVSTCBmb3JtYXQ6IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0se30pLCJodHRwczovL2hvc3Qub3JnL215LWFjdGlvbj90eXBlPWFjdGlvbiZuYW1lPU15QWN0aW9uXG4iKSksbWR4KCJoMiIseyJpZCI6ImFjdGlvbi1wb3RlbnRpYWwifSwiQWN0aW9uIFBvdGVudGlhbCIpLG1keCgicCIsbnVsbCwiVGhlcmUgYXJlIGEgbG90IG9mIGNvb2wgdGhpbmdzIHlvdSBjYW4gYnVpbGQgd2l0aCBhY3Rpb25zLiBGb3IgZXhhbXBsZSwgeW91IGNhbiBidWlsZCBhbiBhY3Rpb24gdGhhdCByZWNlaXZlcyB0aGUgY3VycmVudCBub3RlIHdoaWNoIGNvbnNpc3RzIG9mIGEgYnVuY2ggb2YgbnVtYmVycyBzZXBhcmF0ZWQgYnkgYSBjb21tYSwgYW5kIHRoZSBhY3Rpb24gY2FuIGNvbXB1dGUgdGhlIGF2ZXJhZ2UsIGFuZCByZXR1cm4gdGhlIG5ldyBub3RlIGNvbnRlbnRzIHdoaWNoIGFwcGVuZHMgdGhlIGF2ZXJhZ2UuIFRoaXMgaXMgYSBzaW1wbGUgdXNlIGNhc2UsIGJ1dCBjYW4gYmUgZW5sYXJnZWQgdG8gYnVpbGQgbW9yZSBwb3dlcmZ1bCBhYmlsaXRpZXMuIiksbWR4KCJwIixudWxsLCJZb3UgbWlnaHQgZXZlbiBidWlsZCBhbiBhY3Rpb24gdGhhdCBmb3IgZXhhbXBsZSByZWNlaXZlcyBKYXZhU2NyaXB0IGNvZGUgaW4gdGhlIG5vdGUgdGV4dCwgcnVucyB0aGUgSmF2YVNjcmlwdCwgY29tcHV0ZXMgdGhlIHJlc3VsdCwgYW5kIHJldHVybnMgdGhlIHJlc3VsdCB3aGljaCBpcyB0aGVuIGFwcGVuZGVkIHRvIHRoZSBub3RlIGJvZHkgaW4gY3JlYXRpdmUgd2F5cy4gVGhlIHBvc3NpYmlsaXRpZXMgYXJlIGVuZGxlc3MuIikpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},null]}