{"remainingRequest":"C:\\Users\\theod\\OneDrive\\Documents\\GitHub\\standardnotes\\newdocs\\node_modules\\babel-loader\\lib\\index.js??ref--7-1!C:\\Users\\theod\\OneDrive\\Documents\\GitHub\\standardnotes\\newdocs\\node_modules\\@docusaurus\\mdx-loader\\src\\index.js??ref--7-2!C:\\Users\\theod\\OneDrive\\Documents\\GitHub\\standardnotes\\newdocs\\node_modules\\@docusaurus\\plugin-content-docs\\lib\\markdown\\index.js??ref--7-3!C:\\Users\\theod\\OneDrive\\Documents\\GitHub\\standardnotes\\newdocs\\docs\\doc1.md","dependencies":[{"path":"C:\\Users\\theod\\OneDrive\\Documents\\GitHub\\standardnotes\\newdocs\\docs\\doc1.md","mtime":1580679678306},{"path":"C:\\Users\\theod\\OneDrive\\Documents\\GitHub\\standardnotes\\newdocs\\.docusaurus\\docusaurus-plugin-content-docs\\site-docs-doc-1-md-736.json","mtime":1580679758090},{"path":"C:\\Users\\theod\\OneDrive\\Documents\\GitHub\\standardnotes\\newdocs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580679680066},{"path":"C:\\Users\\theod\\OneDrive\\Documents\\GitHub\\standardnotes\\newdocs\\node_modules\\babel-loader\\lib\\index.js","mtime":1580679679898},{"path":"C:\\Users\\theod\\OneDrive\\Documents\\GitHub\\standardnotes\\newdocs\\node_modules\\@docusaurus\\mdx-loader\\src\\index.js","mtime":1580679679057},{"path":"C:\\Users\\theod\\OneDrive\\Documents\\GitHub\\standardnotes\\newdocs\\node_modules\\@docusaurus\\plugin-content-docs\\lib\\markdown\\index.js","mtime":1580679679084}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iQzpcXFVzZXJzXFx0aGVvZFxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxzdGFuZGFyZG5vdGVzXFxuZXdkb2NzXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjtpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSJDOlxcVXNlcnNcXHRoZW9kXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXHN0YW5kYXJkbm90ZXNcXG5ld2RvY3NcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IHZhciBmcm9udE1hdHRlcj17aWQ6J2RvYzEnLHRpdGxlOidTdHlsZSBHdWlkZScsc2lkZWJhcl9sYWJlbDonU3R5bGUgR3VpZGUnfTtleHBvcnQgdmFyIG1ldGFkYXRhPXsiaWQiOiJkb2MxIiwidGl0bGUiOiJTdHlsZSBHdWlkZSIsImRlc2NyaXB0aW9uIjoiWW91IGNhbiB3cml0ZSBjb250ZW50IHVzaW5nIFtHaXRIdWItZmxhdm9yZWQgTWFya2Rvd24gc3ludGF4XShodHRwczovL2dpdGh1Yi5naXRodWIuY29tL2dmbS8pLlxyIiwic291cmNlIjoiQHNpdGUvZG9jc1xcZG9jMS5tZCIsInBlcm1hbGluayI6Ii9uZXdkb2NzL2RvY3MvZG9jMSIsImVkaXRVcmwiOiJodHRwczovL2dpdGh1Yi5jb20vc3RhbmRhcmRub3Rlcy9uZXdkb2NzL2RvY3MvZG9jMS5tZCIsInNpZGViYXJfbGFiZWwiOiJTdHlsZSBHdWlkZSIsInNpZGViYXIiOiJzb21lU2lkZWJhciIsInByZXZpb3VzIjp7InRpdGxlIjoiU3luYyIsInBlcm1hbGluayI6Ii9uZXdkb2NzL2RvY3Mvc3BlY2lmaWNhdGlvbi9zeW5jIn0sIm5leHQiOnsidGl0bGUiOiJEb2N1bWVudCBOdW1iZXIgMiIsInBlcm1hbGluayI6Ii9uZXdkb2NzL2RvY3MvZG9jMiJ9fTsvKiBAanN4IG1keCAqL2V4cG9ydCB2YXIgcmlnaHRUb2M9W3t2YWx1ZTonTWFya2Rvd24gU3ludGF4JyxpZDonbWFya2Rvd24tc3ludGF4JyxjaGlsZHJlbjpbXX0se3ZhbHVlOidIZWFkZXJzJyxpZDonaGVhZGVycycsY2hpbGRyZW46W119LHt2YWx1ZTonSDIgLSBDcmVhdGUgdGhlIGJlc3QgZG9jdW1lbnRhdGlvbicsaWQ6J2gyLS0tY3JlYXRlLXRoZS1iZXN0LWRvY3VtZW50YXRpb24nLGNoaWxkcmVuOlt7dmFsdWU6J0gzIC0gQ3JlYXRlIHRoZSBiZXN0IGRvY3VtZW50YXRpb24nLGlkOidoMy0tLWNyZWF0ZS10aGUtYmVzdC1kb2N1bWVudGF0aW9uJyxjaGlsZHJlbjpbXX1dfSx7dmFsdWU6J0VtcGhhc2lzJyxpZDonZW1waGFzaXMnLGNoaWxkcmVuOltdfSx7dmFsdWU6J0xpc3RzJyxpZDonbGlzdHMnLGNoaWxkcmVuOltdfSx7dmFsdWU6J0xpbmtzJyxpZDonbGlua3MnLGNoaWxkcmVuOltdfSx7dmFsdWU6J0ltYWdlcycsaWQ6J2ltYWdlcycsY2hpbGRyZW46W119LHt2YWx1ZTonQ29kZScsaWQ6J2NvZGUnLGNoaWxkcmVuOltdfSx7dmFsdWU6J1RhYmxlcycsaWQ6J3RhYmxlcycsY2hpbGRyZW46W119LHt2YWx1ZTonQmxvY2txdW90ZXMnLGlkOidibG9ja3F1b3RlcycsY2hpbGRyZW46W119LHt2YWx1ZTonSW5saW5lIEhUTUwnLGlkOidpbmxpbmUtaHRtbCcsY2hpbGRyZW46W119LHt2YWx1ZTonTGluZSBCcmVha3MnLGlkOidsaW5lLWJyZWFrcycsY2hpbGRyZW46W119XTt2YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17cmlnaHRUb2M6cmlnaHRUb2N9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsWyJjb21wb25lbnRzIl0pO3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgicCIsbnVsbCwiWW91IGNhbiB3cml0ZSBjb250ZW50IHVzaW5nICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHBzOi8vZ2l0aHViLmdpdGh1Yi5jb20vZ2ZtLyJ9KSwiR2l0SHViLWZsYXZvcmVkIE1hcmtkb3duIHN5bnRheCIpLCIuIiksbWR4KCJoMiIseyJpZCI6Im1hcmtkb3duLXN5bnRheCJ9LCJNYXJrZG93biBTeW50YXgiKSxtZHgoInAiLG51bGwsIlRvIHNlcnZlIGFzIGFuIGV4YW1wbGUgcGFnZSB3aGVuIHN0eWxpbmcgbWFya2Rvd24gYmFzZWQgRG9jdXNhdXJ1cyBzaXRlcy4iKSxtZHgoImgyIix7ImlkIjoiaGVhZGVycyJ9LCJIZWFkZXJzIiksbWR4KCJoMSIseyJpZCI6ImgxLS0tY3JlYXRlLXRoZS1iZXN0LWRvY3VtZW50YXRpb24ifSwiSDEgLSBDcmVhdGUgdGhlIGJlc3QgZG9jdW1lbnRhdGlvbiIpLG1keCgiaDIiLHsiaWQiOiJoMi0tLWNyZWF0ZS10aGUtYmVzdC1kb2N1bWVudGF0aW9uIn0sIkgyIC0gQ3JlYXRlIHRoZSBiZXN0IGRvY3VtZW50YXRpb24iKSxtZHgoImgzIix7ImlkIjoiaDMtLS1jcmVhdGUtdGhlLWJlc3QtZG9jdW1lbnRhdGlvbiJ9LCJIMyAtIENyZWF0ZSB0aGUgYmVzdCBkb2N1bWVudGF0aW9uIiksbWR4KCJoNCIseyJpZCI6Img0LS0tY3JlYXRlLXRoZS1iZXN0LWRvY3VtZW50YXRpb24ifSwiSDQgLSBDcmVhdGUgdGhlIGJlc3QgZG9jdW1lbnRhdGlvbiIpLG1keCgiaDUiLHsiaWQiOiJoNS0tLWNyZWF0ZS10aGUtYmVzdC1kb2N1bWVudGF0aW9uIn0sIkg1IC0gQ3JlYXRlIHRoZSBiZXN0IGRvY3VtZW50YXRpb24iKSxtZHgoImg2Iix7ImlkIjoiaDYtLS1jcmVhdGUtdGhlLWJlc3QtZG9jdW1lbnRhdGlvbiJ9LCJINiAtIENyZWF0ZSB0aGUgYmVzdCBkb2N1bWVudGF0aW9uIiksbWR4KCJociIsbnVsbCksbWR4KCJoMiIseyJpZCI6ImVtcGhhc2lzIn0sIkVtcGhhc2lzIiksbWR4KCJwIixudWxsLCJFbXBoYXNpcywgYWthIGl0YWxpY3MsIHdpdGggIixtZHgoImVtIix7cGFyZW50TmFtZToicCJ9LCJhc3Rlcmlza3MiKSwiIG9yICIsbWR4KCJlbSIse3BhcmVudE5hbWU6InAifSwidW5kZXJzY29yZXMiKSwiLiIpLG1keCgicCIsbnVsbCwiU3Ryb25nIGVtcGhhc2lzLCBha2EgYm9sZCwgd2l0aCAiLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToicCJ9LCJhc3Rlcmlza3MiKSwiIG9yICIsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJwIn0sInVuZGVyc2NvcmVzIiksIi4iKSxtZHgoInAiLG51bGwsIkNvbWJpbmVkIGVtcGhhc2lzIHdpdGggIixtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSwiYXN0ZXJpc2tzIGFuZCAiLG1keCgiZW0iLHtwYXJlbnROYW1lOiJzdHJvbmcifSwidW5kZXJzY29yZXMiKSksIi4iKSxtZHgoInAiLG51bGwsIlN0cmlrZXRocm91Z2ggdXNlcyB0d28gdGlsZGVzLiAiLG1keCgiZGVsIix7cGFyZW50TmFtZToicCJ9LCJTY3JhdGNoIHRoaXMuIikpLG1keCgiaHIiLG51bGwpLG1keCgiaDIiLHsiaWQiOiJsaXN0cyJ9LCJMaXN0cyIpLG1keCgib2wiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sIkZpcnN0IG9yZGVyZWQgbGlzdCBpdGVtIiksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sIkFub3RoZXIgaXRlbSBcdTIyQzVcdTIyQzUiLCIqIiwiIFVub3JkZXJlZCBzdWItbGlzdC4iKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSwiQWN0dWFsIG51bWJlcnMgZG9uJ3QgbWF0dGVyLCBqdXN0IHRoYXQgaXQncyBhIG51bWJlciBcdTIyQzVcdTIyQzUxLiBPcmRlcmVkIHN1Yi1saXN0IiksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sIkFuZCBhbm90aGVyIGl0ZW0uIikpLG1keCgicCIsbnVsbCwiXHUyMkM1XHUyMkM1XHUyMkM1WW91IGNhbiBoYXZlIHByb3Blcmx5IGluZGVudGVkIHBhcmFncmFwaHMgd2l0aGluIGxpc3QgaXRlbXMuIE5vdGljZSB0aGUgYmxhbmsgbGluZSBhYm92ZSwgYW5kIHRoZSBsZWFkaW5nIHNwYWNlcyAoYXQgbGVhc3Qgb25lLCBidXQgd2UnbGwgdXNlIHRocmVlIGhlcmUgdG8gYWxzbyBhbGlnbiB0aGUgcmF3IE1hcmtkb3duKS4iKSxtZHgoInAiLG51bGwsIlx1MjJDNVx1MjJDNVx1MjJDNVRvIGhhdmUgYSBsaW5lIGJyZWFrIHdpdGhvdXQgYSBwYXJhZ3JhcGgsIHlvdSB3aWxsIG5lZWQgdG8gdXNlIHR3byB0cmFpbGluZyBzcGFjZXMuXHUyMkM1XHUyMkM1IFx1MjJDNVx1MjJDNVx1MjJDNU5vdGUgdGhhdCB0aGlzIGxpbmUgaXMgc2VwYXJhdGUsIGJ1dCB3aXRoaW4gdGhlIHNhbWUgcGFyYWdyYXBoLlx1MjJDNVx1MjJDNSBcdTIyQzVcdTIyQzVcdTIyQzUoVGhpcyBpcyBjb250cmFyeSB0byB0aGUgdHlwaWNhbCBHRk0gbGluZSBicmVhayBiZWhhdmlvdXIsIHdoZXJlIHRyYWlsaW5nIHNwYWNlcyBhcmUgbm90IHJlcXVpcmVkLikiKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJVbm9yZGVyZWQgbGlzdCBjYW4gdXNlIGFzdGVyaXNrcyIpKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJPciBtaW51c2VzIikpLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sIk9yIHBsdXNlcyIpKSxtZHgoImhyIixudWxsKSxtZHgoImgyIix7ImlkIjoibGlua3MifSwiTGlua3MiKSxtZHgoInAiLG51bGwsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHBzOi8vd3d3Lmdvb2dsZS5jb20ifSksIkknbSBhbiBpbmxpbmUtc3R5bGUgbGluayIpKSxtZHgoInAiLG51bGwsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHBzOi8vd3d3Lmdvb2dsZS5jb20iLCJ0aXRsZSI6Ikdvb2dsZSdzIEhvbWVwYWdlIn0pLCJJJ20gYW4gaW5saW5lLXN0eWxlIGxpbmsgd2l0aCB0aXRsZSIpKSxtZHgoInAiLG51bGwsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHBzOi8vd3d3Lm1vemlsbGEub3JnIn0pLCJJJ20gYSByZWZlcmVuY2Utc3R5bGUgbGluayIpKSxtZHgoInAiLG51bGwsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Ii4uL2Jsb2IvbWFzdGVyL0xJQ0VOU0UifSksIkknbSBhIHJlbGF0aXZlIHJlZmVyZW5jZSB0byBhIHJlcG9zaXRvcnkgZmlsZSIpKSxtZHgoInAiLG51bGwsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHA6Ly9zbGFzaGRvdC5vcmcifSksIllvdSBjYW4gdXNlIG51bWJlcnMgZm9yIHJlZmVyZW5jZS1zdHlsZSBsaW5rIGRlZmluaXRpb25zIikpLG1keCgicCIsbnVsbCwiT3IgbGVhdmUgaXQgZW1wdHkgYW5kIHVzZSB0aGUgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cDovL3d3dy5yZWRkaXQuY29tIn0pLCJsaW5rIHRleHQgaXRzZWxmIiksIi4iKSxtZHgoInAiLG51bGwsIlVSTHMgYW5kIFVSTHMgaW4gYW5nbGUgYnJhY2tldHMgd2lsbCBhdXRvbWF0aWNhbGx5IGdldCB0dXJuZWQgaW50byBsaW5rcy4gIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cDovL3d3dy5leGFtcGxlLmNvbSJ9KSwiaHR0cDovL3d3dy5leGFtcGxlLmNvbSIpLCIgb3IgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cDovL3d3dy5leGFtcGxlLmNvbSJ9KSwiaHR0cDovL3d3dy5leGFtcGxlLmNvbSIpLCIgYW5kIHNvbWV0aW1lcyBleGFtcGxlLmNvbSAoYnV0IG5vdCBvbiBHaXRodWIsIGZvciBleGFtcGxlKS4iKSxtZHgoInAiLG51bGwsIlNvbWUgdGV4dCB0byBzaG93IHRoYXQgdGhlIHJlZmVyZW5jZSBsaW5rcyBjYW4gZm9sbG93IGxhdGVyLiIpLG1keCgiaHIiLG51bGwpLG1keCgiaDIiLHsiaWQiOiJpbWFnZXMifSwiSW1hZ2VzIiksbWR4KCJwIixudWxsLCJIZXJlJ3Mgb3VyIGxvZ28gKGhvdmVyIHRvIHNlZSB0aGUgdGl0bGUgdGV4dCk6IiksbWR4KCJwIixudWxsLCJJbmxpbmUtc3R5bGU6ICIsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiJodHRwczovL2dpdGh1Yi5jb20vYWRhbS1wL21hcmtkb3duLWhlcmUvcmF3L21hc3Rlci9zcmMvY29tbW9uL2ltYWdlcy9pY29uNDgucG5nIiwiYWx0IjoiYWx0IHRleHQiLCJ0aXRsZSI6IkxvZ28gVGl0bGUgVGV4dCAxIn0pKSksbWR4KCJwIixudWxsLCJSZWZlcmVuY2Utc3R5bGU6ICIsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiJodHRwczovL2dpdGh1Yi5jb20vYWRhbS1wL21hcmtkb3duLWhlcmUvcmF3L21hc3Rlci9zcmMvY29tbW9uL2ltYWdlcy9pY29uNDgucG5nIiwiYWx0IjoiYWx0IHRleHQiLCJ0aXRsZSI6IkxvZ28gVGl0bGUgVGV4dCAyIn0pKSksbWR4KCJociIsbnVsbCksbWR4KCJoMiIseyJpZCI6ImNvZGUifSwiQ29kZSIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtamF2YXNjcmlwdCJ9KSwidmFyIHMgPSAnSmF2YVNjcmlwdCBzeW50YXggaGlnaGxpZ2h0aW5nJztcbmFsZXJ0KHMpO1xuIikpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcHl0aG9uIn0pLCJzID0gXCJQeXRob24gc3ludGF4IGhpZ2hsaWdodGluZ1wiXG5wcmludCBzXG4iKSksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0se30pLCJObyBsYW5ndWFnZSBpbmRpY2F0ZWQsIHNvIG5vIHN5bnRheCBoaWdobGlnaHRpbmcuXG5CdXQgbGV0J3MgdGhyb3cgaW4gYSA8Yj50YWc8L2I+LlxuIikpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtanMiLCJtZXRhc3RyaW5nIjoiezJ9IiwiezJ9Ijp0cnVlfSksImZ1bmN0aW9uIGhpZ2hsaWdodE1lKCkge1xuICBjb25zb2xlLmxvZygnVGhpcyBsaW5lIGNhbiBiZSBoaWdobGlnaHRlZCEnKTtcbn1cbiIpKSxtZHgoImhyIixudWxsKSxtZHgoImgyIix7ImlkIjoidGFibGVzIn0sIlRhYmxlcyIpLG1keCgicCIsbnVsbCwiQ29sb25zIGNhbiBiZSB1c2VkIHRvIGFsaWduIGNvbHVtbnMuIiksbWR4KCJ0YWJsZSIsbnVsbCxtZHgoInRoZWFkIix7cGFyZW50TmFtZToidGFibGUifSxtZHgoInRyIix7cGFyZW50TmFtZToidGhlYWQifSxtZHgoInRoIixfZXh0ZW5kcyh7cGFyZW50TmFtZToidHIifSx7ImFsaWduIjpudWxsfSksIlRhYmxlcyIpLG1keCgidGgiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJ0ciJ9LHsiYWxpZ24iOiJjZW50ZXIifSksIkFyZSIpLG1keCgidGgiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJ0ciJ9LHsiYWxpZ24iOiJyaWdodCJ9KSwiQ29vbCIpKSksbWR4KCJ0Ym9keSIse3BhcmVudE5hbWU6InRhYmxlIn0sbWR4KCJ0ciIse3BhcmVudE5hbWU6InRib2R5In0sbWR4KCJ0ZCIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InRyIn0seyJhbGlnbiI6bnVsbH0pLCJjb2wgMyBpcyIpLG1keCgidGQiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJ0ciJ9LHsiYWxpZ24iOiJjZW50ZXIifSksInJpZ2h0LWFsaWduZWQiKSxtZHgoInRkIixfZXh0ZW5kcyh7cGFyZW50TmFtZToidHIifSx7ImFsaWduIjoicmlnaHQifSksIiQxNjAwIikpLG1keCgidHIiLHtwYXJlbnROYW1lOiJ0Ym9keSJ9LG1keCgidGQiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJ0ciJ9LHsiYWxpZ24iOm51bGx9KSwiY29sIDIgaXMiKSxtZHgoInRkIixfZXh0ZW5kcyh7cGFyZW50TmFtZToidHIifSx7ImFsaWduIjoiY2VudGVyIn0pLCJjZW50ZXJlZCIpLG1keCgidGQiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJ0ciJ9LHsiYWxpZ24iOiJyaWdodCJ9KSwiJDEyIikpLG1keCgidHIiLHtwYXJlbnROYW1lOiJ0Ym9keSJ9LG1keCgidGQiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJ0ciJ9LHsiYWxpZ24iOm51bGx9KSwiemVicmEgc3RyaXBlcyIpLG1keCgidGQiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJ0ciJ9LHsiYWxpZ24iOiJjZW50ZXIifSksImFyZSBuZWF0IiksbWR4KCJ0ZCIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InRyIn0seyJhbGlnbiI6InJpZ2h0In0pLCIkMSIpKSkpLG1keCgicCIsbnVsbCwiVGhlcmUgbXVzdCBiZSBhdCBsZWFzdCAzIGRhc2hlcyBzZXBhcmF0aW5nIGVhY2ggaGVhZGVyIGNlbGwuIFRoZSBvdXRlciBwaXBlcyAofCkgYXJlIG9wdGlvbmFsLCBhbmQgeW91IGRvbid0IG5lZWQgdG8gbWFrZSB0aGUgcmF3IE1hcmtkb3duIGxpbmUgdXAgcHJldHRpbHkuIFlvdSBjYW4gYWxzbyB1c2UgaW5saW5lIE1hcmtkb3duLiIpLG1keCgidGFibGUiLG51bGwsbWR4KCJ0aGVhZCIse3BhcmVudE5hbWU6InRhYmxlIn0sbWR4KCJ0ciIse3BhcmVudE5hbWU6InRoZWFkIn0sbWR4KCJ0aCIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InRyIn0seyJhbGlnbiI6bnVsbH0pLCJNYXJrZG93biIpLG1keCgidGgiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJ0ciJ9LHsiYWxpZ24iOm51bGx9KSwiTGVzcyIpLG1keCgidGgiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJ0ciJ9LHsiYWxpZ24iOm51bGx9KSwiUHJldHR5IikpKSxtZHgoInRib2R5Iix7cGFyZW50TmFtZToidGFibGUifSxtZHgoInRyIix7cGFyZW50TmFtZToidGJvZHkifSxtZHgoInRkIixfZXh0ZW5kcyh7cGFyZW50TmFtZToidHIifSx7ImFsaWduIjpudWxsfSksbWR4KCJlbSIse3BhcmVudE5hbWU6InRkIn0sIlN0aWxsIikpLG1keCgidGQiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJ0ciJ9LHsiYWxpZ24iOm51bGx9KSxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJ0ZCJ9LCJyZW5kZXJzIikpLG1keCgidGQiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJ0ciJ9LHsiYWxpZ24iOm51bGx9KSxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InRkIn0sIm5pY2VseSIpKSksbWR4KCJ0ciIse3BhcmVudE5hbWU6InRib2R5In0sbWR4KCJ0ZCIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InRyIn0seyJhbGlnbiI6bnVsbH0pLCIxIiksbWR4KCJ0ZCIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InRyIn0seyJhbGlnbiI6bnVsbH0pLCIyIiksbWR4KCJ0ZCIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InRyIn0seyJhbGlnbiI6bnVsbH0pLCIzIikpKSksbWR4KCJociIsbnVsbCksbWR4KCJoMiIseyJpZCI6ImJsb2NrcXVvdGVzIn0sIkJsb2NrcXVvdGVzIiksbWR4KCJibG9ja3F1b3RlIixudWxsLG1keCgicCIse3BhcmVudE5hbWU6ImJsb2NrcXVvdGUifSwiQmxvY2txdW90ZXMgYXJlIHZlcnkgaGFuZHkgaW4gZW1haWwgdG8gZW11bGF0ZSByZXBseSB0ZXh0LiBUaGlzIGxpbmUgaXMgcGFydCBvZiB0aGUgc2FtZSBxdW90ZS4iKSksbWR4KCJwIixudWxsLCJRdW90ZSBicmVhay4iKSxtZHgoImJsb2NrcXVvdGUiLG51bGwsbWR4KCJwIix7cGFyZW50TmFtZToiYmxvY2txdW90ZSJ9LCJUaGlzIGlzIGEgdmVyeSBsb25nIGxpbmUgdGhhdCB3aWxsIHN0aWxsIGJlIHF1b3RlZCBwcm9wZXJseSB3aGVuIGl0IHdyYXBzLiBPaCBib3kgbGV0J3Mga2VlcCB3cml0aW5nIHRvIG1ha2Ugc3VyZSB0aGlzIGlzIGxvbmcgZW5vdWdoIHRvIGFjdHVhbGx5IHdyYXAgZm9yIGV2ZXJ5b25lLiBPaCwgeW91IGNhbiAiLG1keCgiZW0iLHtwYXJlbnROYW1lOiJwIn0sInB1dCIpLCIgIixtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSwiTWFya2Rvd24iKSwiIGludG8gYSBibG9ja3F1b3RlLiIpKSxtZHgoImhyIixudWxsKSxtZHgoImgyIix7ImlkIjoiaW5saW5lLWh0bWwifSwiSW5saW5lIEhUTUwiKSxtZHgoImRsIixudWxsLG1keCgiZHQiLG51bGwsIkRlZmluaXRpb24gbGlzdCIpLG1keCgiZGQiLG51bGwsIklzIHNvbWV0aGluZyBwZW9wbGUgdXNlIHNvbWV0aW1lcy4iKSxtZHgoImR0IixudWxsLCJNYXJrZG93biBpbiBIVE1MIiksbWR4KCJkZCIsbnVsbCwiRG9lcyAqbm90KiB3b3JrICoqdmVyeSoqIHdlbGwuIFVzZSBIVE1MICIsbWR4KCJlbSIsbnVsbCwidGFncyIpLCIuIikpLG1keCgiaHIiLG51bGwpLG1keCgiaDIiLHsiaWQiOiJsaW5lLWJyZWFrcyJ9LCJMaW5lIEJyZWFrcyIpLG1keCgicCIsbnVsbCwiSGVyZSdzIGEgbGluZSBmb3IgdXMgdG8gc3RhcnQgd2l0aC4iKSxtZHgoInAiLG51bGwsIlRoaXMgbGluZSBpcyBzZXBhcmF0ZWQgZnJvbSB0aGUgb25lIGFib3ZlIGJ5IHR3byBuZXdsaW5lcywgc28gaXQgd2lsbCBiZSBhICIsbWR4KCJlbSIse3BhcmVudE5hbWU6InAifSwic2VwYXJhdGUgcGFyYWdyYXBoIiksIi4iKSxtZHgoInAiLG51bGwsIlRoaXMgbGluZSBpcyBhbHNvIGEgc2VwYXJhdGUgcGFyYWdyYXBoLCBidXQuLi4gVGhpcyBsaW5lIGlzIG9ubHkgc2VwYXJhdGVkIGJ5IGEgc2luZ2xlIG5ld2xpbmUsIHNvIGl0J3MgYSBzZXBhcmF0ZSBsaW5lIGluIHRoZSAiLG1keCgiZW0iLHtwYXJlbnROYW1lOiJwIn0sInNhbWUgcGFyYWdyYXBoIiksIi4iKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},null]}